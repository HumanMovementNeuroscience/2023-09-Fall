{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Neural Control of Real-World Human Movement - 2023 Fall","text":"<ul> <li>Instructor: Jonathan Samir Matthis Course Dates: 6 Sept 2023 - 6 Dec 2023</li> </ul>"},{"location":"#course-materials-and-resources","title":"Course Materials and Resources","text":"<ul> <li>Discord Server (Invite on Canvas) - https://northeastern.instructure.com/courses/144116/modules/items/8876606</li> <li>Canvas page - https://northeastern.instructure.com/courses/151504</li> <li>Course website: https://humanmovementneuroscience.github.io/2023-09-Fall/</li> </ul>"},{"location":"#schedule-overview","title":"Schedule Overview","text":"Date (Tues) Week Phase Plans 12  Sept 2023 Week 1 Prepare Introduction 19  Sept 2023 Week 2 Prepare Training &amp; Literature Review 26  Sept 2023 Week 3 Planning Research Planning 3  Oct 2023 Week 4 Planning Research / Data Collection / Analysis 10  Oct 2023 Week 5 Project Research / Data Collection / Analysis 11  Oct 2023 Week 6 Project Research / Data Collection / Analysis 24  Oct 2023 Week 7 Project Research / Data Collection / Analysis 31  Oct 2023 Week 8 Project Research / Data Collection / Analysis 7  Nov 2023 Week 9 Project Research / Data Collection / Analysis 14  Nov 2023 Week 10 Project Research / Data Collection / Analysis 21  Nov 2023 Week 11 Project Research / Data Collection / Analysis 28  Nov 2023 Week 12 Project Research / Data Collection / Analysis 5  Dec 2023 Week 13 Present Presentating our work to each other <p>```mermaid gantt     dateFormat  MM-DD     title Course Project Schedule</p> <pre><code>section Prepare\nIntro              :2023-09-12, 7d\n\nTraining :2023-09-19, 7d\n\nsection Planning\nPlanning         :2023-09-26, 7d\n\nsection Project\nResearch / Data Collection / Analysis :2023-10-03, 49d\n\nsection Present\nPresent   :2023-11-21, 14d\n\nSection Pwrap up\nWrap up \u2728                 :2023-12-05, 9d\n</code></pre> <p>```</p>"},{"location":"#course-description","title":"Course Description","text":"<p>Students will explore the neural basis of natural human behavior in real-world contexts (e.g., [sports], [dance], or [everyday-activities]) by investigating the [neural-control] of [full-body] [human-movement]. The course will cover [philosophical], [technological], and [scientific] aspects related to the study of [natural-behavior] while emphasizing hands-on, project-based learning. Students will use [free-open-source-software], and [artificial-intelligence],[machine-learning] and [computer-vision] driven tools and methods to record human movement in unconstrained environments.</p> <p>The course promotes interdisciplinary collaboration and introduces modern techniques for decentralized [project-management], [AI-assisted-research-techniques], and [Python]-based programming (No prior programming experience is required). Students will receive training in the use of AI technology for project management and research conduct, including [literature-review], [data-analysis], [data-visualization], and [presentation-of-results]. Through experiential learning, students will develop valuable skills in planning and executing technology-driven research projects while examining the impact of structural inequities on scientific inquiry.</p>"},{"location":"#course-objectives","title":"Course Objectives","text":"<ul> <li>Gain exposure to key concepts related to neural control of human movement.</li> <li>Apply interdisciplinary approaches when collaborating on complex problems.</li> <li>Develop a basic understanding of machine-learning tools for recording human movements.</li> <li>Contribute effectively within a team setting towards achieving common goals.</li> <li>Acquire valuable skills in data analysis or background research.</li> </ul>"},{"location":"#learning-outcomes","title":"Learning Outcomes","text":""},{"location":"#design-and-conduct-a-research-project","title":"Design and conduct a research project","text":"<ul> <li>Develop a research plan</li> <li>Conduct a literature review</li> <li>Compile, analyze, and interpret empirical results</li> <li>Present research to a group</li> </ul>"},{"location":"#technical-skill-development","title":"Technical skill development:","text":""},{"location":"#markdown-text-editing","title":"Markdown text editing","text":"<ul> <li>Software: Obsidian.md</li> <li>Web-based tool: hackmd.io</li> </ul>"},{"location":"#basic-github-navigation","title":"Basic Github navigation","text":"<ul> <li>Web-based tool: github.com</li> </ul>"},{"location":"#basic-python-data-analysis","title":"Basic Python data analysis","text":"<ul> <li>Software:</li> <li>PyCharm)</li> <li>VS Code </li> <li>Web-based tool: </li> <li>Google Colab</li> </ul>"},{"location":"#3d-kinematic-analysis-and-animation","title":"[3d] [kinematic-analysis] (and [Animation])","text":"<ul> <li>Software: </li> <li>Blender</li> </ul>"},{"location":"Community%20Guidelines/Code%20of%20Conduct/","title":"Code of Conduct","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"Community%20Guidelines/Code%20of%20Conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language </li> <li>avoid making \"male by default\" assumptions (e.g. saying \"alright boys\" when addressing a group of people)</li> <li>Being respectful of differing viewpoints,  experiences, and backgrounds</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of inappropriately sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"Community%20Guidelines/Code%20of%20Conduct/#conflict-resolution","title":"Conflict Resolution","text":"<p>If conflicts arise within the community, we encourage participants to resolve them through respectful dialogue. If necessary, contact us at info at freemocap dot org and we will do our best to facilitate resolution by providing guidance and mediation.</p>"},{"location":"Contributing%20guide/python_style_guide/","title":"Python style guide","text":"<p>This style guide aims to maintain code readability, quality, and maintainability. </p>"},{"location":"Contributing%20guide/python_style_guide/#general-guidelines","title":"General Guidelines","text":"<ul> <li>Follow a Universal Design approach that aspires to be interpretable to the widest possible number of people </li> <li>Follow standard best practices, e.g  S.O.L.I.D etc</li> <li>Follow  PEP 8 Guidelines</li> <li>Use  Black to auto-format your code</li> </ul>"},{"location":"Contributing%20guide/python_style_guide/#specific-guidelines","title":"Specific Guidelines","text":"<pre><code>TO DO - Add code samples for each guideline (along with links to external references when applicable)\n</code></pre> <ol> <li> <p>Include Google-formatted docstrings: Use Google-style docstrings for functions, methods, and classes to provide    clear and concise documentation.  </p> </li> <li> <p>Type hints: Use input and return type hints for functions and methods to improve code readability and facilitate    better tooling support.  </p> </li> <li> <p>Keyword arguments: Prefer using keyword arguments over simple arguments for functions and methods to improve code    clarity.  </p> </li> <li> <p>Private methods and attributes: Use leading underscores to denote private methods and attributes in classes, and    use <code>@property</code> decorators when appropriate.  </p> </li> <li> <p>Descriptive names: Use full words in variable and class names instead of abbreviations (e.g., <code>database</code> instead   of <code>db</code>).  </p> </li> <li> <p>PEP8 and <code>black</code> formatting: Follow PEP8 and <code>black</code> code formatting guidelines to maintain consistency and  readability.  </p> </li> <li> <p>Consistent naming conventions: Adopt consistent naming conventions for variables, functions, and classes.  </p> </li> <li>Use <code>snake_case</code> for variables and functions (e.g., <code>my_variable</code>, <code>my_function</code>)  </li> <li>Use <code>PascalCase</code> for class names (e.g., <code>MyClass</code>)  </li> <li> <p>Use <code>UPPERCASE</code> for constants (e.g., <code>MY_CONSTANT</code>)  </p> </li> <li> <p>Keep functions and methods short: Aim to keep functions and methods concise, ideally not exceeding 15-20 lines of  code.  </p> </li> <li> <p>Modularize code: Organize code into modules and packages to maintain a clean and organized codebase.  </p> </li> <li> <p>Minimal comments: Avoid comments if possible. Write code that is simple and descriptive (See pt 5) enough that comments are  not necessary. If needed, use comments sparingly to provide context or explain complex or non-obvious sections of  your code.  </p> </li> <li> <p>Error handling: Use appropriate error handling techniques, such as <code>try</code> and <code>except</code> blocks, to handle     exceptions and provide meaningful error messages to users.  </p> </li> <li> <p>Write tests: Write unit tests to ensure the correct functioning of your code.  </p> </li> <li> <p>Code reviews: Perform code reviews with team members or peers to maintain a high-quality codebase.</p> </li> </ol>"}]}